# Nome do fluxo de trabalho
name: Deploy to GitHub Pages

# Gatilho: Este fluxo de trabalho roda toda vez que houver um 'push' para a branch 'main'
on:
  push:
    branches:
      - main

# Permissões necessárias para que a Action possa publicar no GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Tarefas a serem executadas
jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      # 1. Baixa o código do seu repositório
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Configura o ambiente Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # 3. Instala as dependências do projeto
      - name: Install dependencies
        run: npm install

      # 4. Constrói o site, injetando os segredos como variáveis de ambiente
      - name: Build
        run: npm run build
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}

      # 5. Configura o GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # 6. Faz o upload dos artefatos (a pasta 'dist')
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

      # 7. Publica no GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4